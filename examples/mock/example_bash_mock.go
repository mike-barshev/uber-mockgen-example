// Code generated by MockGen. DO NOT EDIT.
// Source: example_bash.go
//
// Generated by this command:
//
//	mockgen -source=example_bash.go -destination=mock/example_bash_mock.go -package=examples_mock
//
// Package examples_mock is a generated GoMock package.
package examples_mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCounterInterface is a mock of CounterInterface interface.
type MockCounterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCounterInterfaceMockRecorder
}

// MockCounterInterfaceMockRecorder is the mock recorder for MockCounterInterface.
type MockCounterInterfaceMockRecorder struct {
	mock *MockCounterInterface
}

// NewMockCounterInterface creates a new mock instance.
func NewMockCounterInterface(ctrl *gomock.Controller) *MockCounterInterface {
	mock := &MockCounterInterface{ctrl: ctrl}
	mock.recorder = &MockCounterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCounterInterface) EXPECT() *MockCounterInterfaceMockRecorder {
	return m.recorder
}

// MinusOne mocks base method.
func (m *MockCounterInterface) MinusOne(i int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MinusOne", i)
	ret0, _ := ret[0].(int)
	return ret0
}

// MinusOne indicates an expected call of MinusOne.
func (mr *MockCounterInterfaceMockRecorder) MinusOne(i any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MinusOne", reflect.TypeOf((*MockCounterInterface)(nil).MinusOne), i)
}

// PlusOne mocks base method.
func (m *MockCounterInterface) PlusOne(i int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PlusOne", i)
	ret0, _ := ret[0].(int)
	return ret0
}

// PlusOne indicates an expected call of PlusOne.
func (mr *MockCounterInterfaceMockRecorder) PlusOne(i any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PlusOne", reflect.TypeOf((*MockCounterInterface)(nil).PlusOne), i)
}
